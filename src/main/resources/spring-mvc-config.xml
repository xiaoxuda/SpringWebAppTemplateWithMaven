<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

    <context:property-placeholder location="classpath:application.properties"/>

    <!-- 通过引入@RequestMapping, @ExceptionHandler支持注解 -->
    <mvc:annotation-driven>
        <!-- 解决@ResponseBody中文乱码 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 使容器使用spring框架提供的servlet来处理静态文件 -->
    <mvc:default-servlet-handler/>
    <!-- 包自动扫描机制，自动扫描给定位置内的注解 并提供解析器-->
    <context:component-scan base-package="cn.orditech"></context:component-scan>

    <!-- 视图解析会按order从小到大尝试使用相应的解析器解析view，解析到就停止 -->
    <!-- combine different view technologies in a web application -->
    <!--
    <bean id="viewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
        <property name="basename" value="cn.orditech.controller.views"/>
        <property name="order" value="1"/>
    </bean>
     -->
    <!--
    This bean sets up the Velocity environment for us based on a root path for templates.
    Optionally, a properties file can be specified for more control over the Velocity
    environment, but the defaults are pretty sane for file based template loading.

    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/views/velocity/"/>
         <property name="configLocation" value="/WEB-INF/config/velocity.properties"/>
        <property name="velocityProperties">
            <props>
                <prop  key="input.encoding">GBK</prop>
                <prop  key="output.encoding">UTF-8</prop>
            </props>
          </property>
    </bean>
    -->
    <!--
    View resolvers can also be configured with ResourceBundles or XML files. If you need
    different view resolving based on Locale, you have to use the resource bundle resolver.

    <bean id="vmViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".vm"/>
        <property name="contentType" value="text/html;charset=utf-8" />
        <property name="order" value="2"/>
    </bean>
    -->
    <!-- 默认最低等级的视图解析器，如果无法解析到view则直接返回null -->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
    </bean>
</beans>